using Skyblivion.OBSLexicalParser.Builds;
using Skyblivion.OBSLexicalParser.TES4.Context;
using Skyblivion.OBSLexicalParser.TES5.Service;
using Skyblivion.OBSLexicalParser.TES5.Types;
using System;

namespace Skyblivion.OBSLexicalParser.Commands
{
    class BuildFileDeleteCommand : LPCommand
    {
        public const string FriendlyNameConst = "Delete Old Build Files";
        public BuildFileDeleteCommand()
            : base("skyblivion:parser:delete", FriendlyNameConst, "Delete files previously generated by builds")
        { }

        public override void Execute()
        {
            Execute(BuildTarget.DEFAULT_TARGETS);
        }

        public void Execute(string targets, string? buildPath = null)
        {
            if (!PreExecutionChecks(false, true, false, false)) { return; }
            if (buildPath == null) { buildPath = Build.DEFAULT_BUILD_PATH; }
            Build build = new Build(buildPath);
            using (BuildLogServices buildLogServices = new BuildLogServices(build))
            {
                BuildTargetCollection buildTargets = BuildTargetFactory.GetCollection(targets, build, buildLogServices, true, out _, out _, out _);
                buildTargets.DeleteBuildFiles();
            }
            Console.WriteLine("Deletion Complete");
        }
    }
}
